package me.antoniocaccamo.framework.core;

import java.net.URLClassLoader;
import java.util.Objects;
import java.util.StringJoiner;

public class AppRuntime {

    private  final Class<? extends AppStarter> appStarter;
    private  final URLClassLoader loader;


    public AppRuntime(Class<? extends AppStarter> appStarter, URLClassLoader loader) {
        this.appStarter = Objects.requireNonNull(appStarter);
        this.loader = Objects.requireNonNull(loader);
    }

    // region Getters and setters -- generated by BoB the Builder of Beans
    public Class<? extends AppStarter> getAppStarter() {
        return appStarter;
    }


    public URLClassLoader getLoader() {
        return loader;
    }

    public final static AppRuntimeBuilder builder() {
        return new AppRuntimeBuilder();
    }

    // endregion Getters and setters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        AppRuntime that = (AppRuntime) o;

        return Objects.equals(this.getAppStarter(), that.getAppStarter()) && Objects.equals(this.getLoader(), that.getLoader());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getAppStarter(), getLoader());
    }

    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "[", "]")
                .add("appStarter=" + getAppStarter()).add("loader=" + getLoader()).toString();
    }// endregion hashCode() and equals()

    public static final class AppRuntimeBuilder {
        private  Class<? extends AppStarter> appStarter;
        private URLClassLoader loader;

        private AppRuntimeBuilder() {
        }

        public static AppRuntimeBuilder anAppRuntime() {
            return new AppRuntimeBuilder();
        }

        public AppRuntimeBuilder appStarter(Class<? extends AppStarter> appStarter) {
            this.appStarter = appStarter;
            return this;
        }

        public AppRuntimeBuilder loader(URLClassLoader loader) {
            this.loader = loader;
            return this;
        }

        public AppRuntime build() {
            return new AppRuntime(appStarter, loader);
        }
    }
    // endregion Constructor, getters, setters, equals, hashCode, toString
}
